<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ccbjb.common.dao.ISysPermissionDao" >
  <sql id="Base_Column_List" >
    id, url, name
  </sql>

  <sql id="limit_sql">
    <if test="page_sql != null and page_sql != ''">
      ${page_sql}
    </if>
  </sql>

  <sql id="where_all">
    <where>
      <if test="findContent != null and findContent !='' " >
        and (
        LOWER(name) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%") or
        LOWER(url) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")
        )
      </if>
    </where>
  </sql>
  <select id="findAll" resultType="SysPermission" >
    select
    <include refid="Base_Column_List" />
    from sys_permission
    <include refid="where_all"/>
    <include refid="limit_sql" />
  </select>
  <select id="findCount" resultType="SysPermission" >
    select count(id) from  sys_permission
    <include refid="where_all" />
  </select>
  <!-- 根据角色获取权限，marker:0,没有权限，marker：非0(和up.id)一致表示有权限。
  	com.sojson.permission.bo.UPermissionBo中的这个方法是校验权限
  	public boolean isCheck(){
		return StringUtils.equals(roleId,marker);
	}
  -->
  <select id="selectPermissionById" resultType="SysPermissionModel">
    select up.id,ur.id roleId,up.name,up.url,min(ifnull(ur.id,0))marker from sys_permission up
    left join sys_role_permission urp on urp.pid = up.id
    left join (select id from sys_role where id = #{id,jdbcType=BIGINT}) ur on ur.id = urp.rid
    group by up.id
  </select>
  <!-- 根据用ID查询permission -->
  <select id="findPermissionByUserId" resultType="java.lang.String">
    select p.url from sys_permission p , sys_role_permission rp, sys_user_role ur
    where uid =#{id,jdbcType=BIGINT} and p.id = rp.pid and rp.rid = ur.rid
  </select>


  <select id="selectByPrimaryKey" resultType="SysPermission" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from sys_permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="SysPermission" >
    insert into sys_permission (id, url, name)
    values (#{id,jdbcType=BIGINT}, #{url,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="SysPermission" >
    insert into sys_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="name != null" >
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="SysPermission" >
    update sys_permission
    <set >
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="SysPermission" >
    update sys_permission
    set url = #{url,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>